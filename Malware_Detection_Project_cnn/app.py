# import os
# import subprocess
# import flask
# from flask import Flask, jsonify, render_template

# app = Flask(__name__)

# @app.route('/')
# def index():
#    return render_template('index.html')

# @app.route('/process-email', methods=['POST'])
# def process_email():
#    try:
#       result = subprocess.run(['python', 'email_processor.py'], 
#                               capture_output=True, 
#                               text=True)
      
#       if result.returncode != 0:
#          print(f"Error running email_processor.py: {result.stderr}")
#          return jsonify({"error": "Script execution failed"}), 500
      
#       # Read the result file
#       result_file = os.path.join('results', 'result.txt')
#       if not os.path.exists(result_file):
#          return jsonify({"error": "Result file not found"}), 500
         
#       with open(result_file, 'r') as f:
#          result_text = f.read().strip()
      
#       # Extract the prediction
#       prediction = result_text.split(': ')[1] if ': ' in result_text else result_text
      
#       return jsonify({"prediction": prediction})
   
#    except Exception as e:
#       print(f"Error: {str(e)}")
#       return jsonify({"error": str(e)}), 500

# if __name__ == '__main__':
#    os.makedirs('templates', exist_ok=True)
#    # Create templates directory if it doesn't exist
#    with open('templates/index.html', 'w') as f:
#       # Copy the HTML content here (without the style and script tags)
#       with open('index.html', 'r') as source:
#          f.write(source.read())
   
#    app.run(debug=True, port=5000)


















# import os
# import subprocess
# import flask
# import json
# from flask import Flask, jsonify, render_template

# app = Flask(__name__)

# @app.route('/')
# def index():
#    return render_template('index.html')

# @app.route('/process-email', methods=['POST'])
# def process_email():
#    try:
#       result = subprocess.run(['python', 'email_processor.py'], 
#                               capture_output=True, 
#                               text=True)
      
#       # Read email metadata if available
#       metadata_file = os.path.join('results', 'email_metadata.json')
#       metadata = {}
      
#       if os.path.exists(metadata_file):
#          with open(metadata_file, 'r') as f:
#             metadata = json.load(f)
      
#       # Check if there was an error with no Drive link
#       if "error" in metadata or not metadata.get("drive_link"):
#          error_message = metadata.get("error", "No Google Drive links found in the email")
#          return jsonify({
#             "error": error_message,
#             "metadata": metadata
#          })
      
#       # Read the result file if processing was successful
#       result_file = os.path.join('results', 'result.txt')
#       prediction = None
      
#       if os.path.exists(result_file):
#          with open(result_file, 'r') as f:
#             result_text = f.read().strip()
#             # Extract the prediction
#             prediction = result_text.split(': ')[1] if ': ' in result_text else result_text
      
#       return jsonify({
#          "prediction": prediction,
#          "metadata": metadata
#       })
   
#    except Exception as e:
#       print(f"Error: {str(e)}")
#       return jsonify({"error": str(e)}), 500

# if __name__ == '__main__':
#    os.makedirs('templates', exist_ok=True)
#    # Create templates directory if it doesn't exist
#    with open('templates/index.html', 'w') as f:
#       # Copy the HTML content here (without the style and script tags)
#       with open('index.html', 'r') as source:
#          f.write(source.read())
   
#    app.run(debug=True, port=5000)













import os
import subprocess
import flask
import json
from flask import Flask, jsonify, render_template

app = Flask(__name__)

@app.route('/')
def index():
   return render_template('index.html')

@app.route('/process-email', methods=['POST'])
def process_email():
   try:
      result = subprocess.run(['python', 'email_processor.py'], 
                              capture_output=True, 
                              text=True)
      
      # Read email metadata if available
      metadata_file = os.path.join('results', 'email_metadata.json')
      metadata = {}
      
      if os.path.exists(metadata_file):
         with open(metadata_file, 'r', encoding='utf-8') as f:
               metadata = json.load(f)
      
      # Check for errors
      if "error" in metadata or not metadata.get("drive_link"):
         error_message = metadata.get("error", "No Google Drive links found in the email")
         return jsonify({
               "error": error_message,
               "metadata": metadata
         })
      
      # Read prediction result
      result_file = os.path.join('results', 'result.txt')
      prediction = None
      
      if os.path.exists(result_file):
         with open(result_file, 'r', encoding='utf-8') as f:
               result_text = f.read().strip()
               prediction = result_text.split(': ')[1] if ': ' in result_text else result_text
      
      return jsonify({
         "prediction": prediction,
         "metadata": metadata
      })
   
   except Exception as e:
      print(f"Error: {str(e)}")
      return jsonify({"error": str(e)}), 500

if __name__ == '__main__':
   os.makedirs('templates', exist_ok=True)
   
   # Copy HTML template with proper encoding
   try:
      with open('index.html', 'r', encoding='utf-8') as source:
         html_content = source.read()
         
         with open('templates/index.html', 'w', encoding='utf-8') as f:
               f.write(html_content)
               
   except UnicodeDecodeError as e:
      print(f"Encoding error: {str(e)}")
      print("Make sure your index.html is saved with UTF-8 encoding")
      exit(1)
   
   app.run(debug=True, port=5000)